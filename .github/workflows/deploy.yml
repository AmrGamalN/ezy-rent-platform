name: CI/CD Pipeline

on:
  workflow_run:
    workflows: ['CI + Auto Merge']
    types:
      - completed
  push:
    branches: [main]

permissions:
  contents: write
  id-token: write
  actions: write

jobs:
  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier
        run: npm run format

  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Auth Service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/auth-service/Dockerfile
          push: true
          tags: amrgamaleid/auth-service:latest

      - name: Build & Push Car Service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/car-service/Dockerfile
          push: true
          tags: amrgamaleid/car-service:latest

      - name: Build & Push Elastic Service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/elastic-service/Dockerfile
          push: true
          tags: amrgamaleid/elastic-service:latest

  deploy-to-ec2:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    # if: >
    #   (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main') ||
    #   (github.event_name == 'push' && github.ref == 'refs/heads/main')

    steps:
      - name: SSH to EC2 & Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/paymob
            git pull origin main

            docker pull amrgamaleid/auth-service:latest
            docker pull amrgamaleid/car-service:latest
            docker pull amrgamaleid/elastic-service:latest

            docker stop auth-service || true && docker rm auth-service || true
            docker stop car-service || true && docker rm car-service || true
            docker stop elastic-service || true && docker rm elastic-service || true

            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

